{"version":3,"sources":["components/Bridge.js","components/Header.js","App.js","serviceWorker.js","index.js","components/Body.js","components/Vote.js","components/BNS.js"],"names":["Bridge","address","Promise","resolve","reject","window","web3","eth","getBalance","err","balance","div","toNumber","params","call","ret","txHash","delay","callback","time","setTimeout","length","test","getTransactionReceipt","tx","isTxConfirmed","bind","status","Error","Header","className","href","src","App","id","Body","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","voteAddress","DNSAddr","useState","Vote","vote","BNS","bns","ethereum","isMetaMask","chainId","setChainId","selectedAddress","setSelectedAddress","setBalance","topics","setTopics","topicOptions","setTopicOptions","on","accounts","nChainId","useEffect","b","initialize","a","getTopicsLength","v","totalTopics","i","t","res","getLocked","locked","getVotedOption","vo","voted","nonZero","j","push","topic","name","Buffer","from","toString","concat","ops","Object","assign","getOptionsLength","tt","totalTopicOptions","k","getOption","op","opp","getTotalVotes","vt","nonZeroOp","l","option","votes","equals","fetchVote","requestAccount","e","preventDefault","request","method","alert","LoadingButton","props","isLoading","setIsLoading","onClick","arguments","btnText","RequestMetamask","networkVersion","target","EnableMetamask","setLookupBNS","value","lookupBNS","n","sendTransaction","Resolve","addr","substr","style","minWidth","placeholder","type","onChange","MetamaskNotFound","TopicsTable","checked","newOption","optionChange","voteOption","dataset","topicName","topicname","optionname","voteTopicOption","vs","textContent","parseInt","remove","log","addOption","padEnd","addTopicOption","map","key","filter","o","newOptionChange","htmlFor","defaultChecked","disabled","data-topic","data-option","data-optionname","data-topicname","isConnected","_address","_abi","aabi","Abi","KeccakHashAsync","keccak","inputsType","inputs","internalType","outputsType","outputs","hash","keccak256","join","signature","slice","args","rawEncode","conBuf","fill","callData","stateMutability","constant","ethCall","to","data","rawDecode","gasPrice","confirmation"],"mappings":"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","file":"static/js/main.ffd5db4c.chunk.js","sourcesContent":["// Bridg.js\n// It's bridge the ui to diode network, also bridge\n// some web3 api to promise like api.\n// Why do we bridge web3 api to promise like api?\n// With promise like api, you can use async/await.\n// Also then/catch instead of callback.\n// Note: we didn't bridge all web3 rpc api.\nconst Bridge = {};\nBridge.getBalance = (address) => {\n  return new Promise((resolve, reject) => {\n    window.web3.eth.getBalance(address, (err, balance) => {\n      if (err) reject(err);\n      else {resolve(balance.div(1e18).toNumber())};\n    });\n  });\n}\n\nBridge.ethCall = (params) => {\n  return new Promise((resolve, reject) => {\n    window.web3.eth.call(params, (err, ret) => {\n      if (err) reject(err);\n      else {resolve(ret)};\n    });\n  });\n}\n\nBridge.isTxConfirmed = (txHash) => {\n  let delay = (callback, time) => {\n    return new Promise(function (resolve, reject) {\n      window.setTimeout(() => {\n          resolve(callback());\n      }, time);\n    });\n  }\n\n  return new Promise((resolve, reject) => {\n    if (\n      !txHash ||\n      txHash.length != 66 ||\n      !/^0x[0-9a-f]{64}$/i.test(txHash)\n    ) {\n      reject(\"Not a valid transaction hash\");\n    }\n    window.web3.eth\n      .getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          return resolve(\n            delay(Bridge.isTxConfirmed.bind(this, txHash), 1000)\n          );\n        }\n        if (tx) {\n          if (tx.status === '0x01') {\n            return resolve(tx);\n          }\n          return reject(new Error(\"tx was failed\", txHash));\n        }\n        resolve(\n          delay(Bridge.isTxConfirmed.bind(this, txHash), 1000)\n        )\n      });\n    }\n  );\n}\n\nexport default Bridge;","import React from 'react';\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <div className=\"logo\">\n        <a href=\"https://diode.io\">\n          <img src=\"https://diode.io/images/logo.svg\" />\n        </a>\n      </div>\n      <ul className=\"navbar\">\n        <li><a href=\"https://diode.io/prenet/#/fleets\" className=\"\">Prenet</a></li>\n        <li><a href=\"https://diode.io/blog\" className=\"\">Blog</a></li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Header;","import React from 'react';\nimport Header from './components/Header';\nimport Body from './components/Body';\nimport './scss/prenet.scss';\n\n\nfunction App() {\n  return (\n    <div id=\"Workshop\">\n      <Header />\n      <Body />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useEffect, useState } from 'react';\nimport Bridge from './Bridge';\nimport Vote from './Vote';\nimport BNS from './BNS';\nimport QRCode from 'qrcode.react';\n\nfunction Body() {\n  // deployed tx: 0xf71b1b70696d4d7032e6f6c9de7b45380179a6deb0ed590a88841bafdba66a3d\n  const voteAddress = '0x520bB1F53a7A6BCfc4C70E024c4e8e4Cc7499B9a';\n  const DNSAddr = \"0xaf60faa5cd840b724742f1af116168276112d6a6\";\n  let [vote, setVote] = useState(new Vote(voteAddress));\n  let [bns, setBNS] = useState(new BNS(DNSAddr));\n  let ethereum = {\n    isMetaMask: false\n  };\n  let [chainId, setChainId] = useState('');\n  let [selectedAddress, setSelectedAddress] = useState('');\n  let [balance, setBalance] = useState(0);\n  let [topics, setTopics] = useState([]);\n  let [topicOptions, setTopicOptions] = useState({});\n  if (window.ethereum) {\n    ethereum = window.ethereum;\n    if (typeof ethereum.on === 'function') {\n      ethereum.on('accountsChanged', (accounts) => {\n        if (accounts.length <= 0 && selectedAddress) {\n          setSelectedAddress(null);\n        }\n      });\n      ethereum.on('chainChanged', (nChainId) => {\n        setChainId(nChainId);\n      });\n      // ethereum.on('connect', () => {\n      // });\n      // ethereum.on('disconnect', () => {\n      // });\n    }\n  }\n  useEffect(() => {\n    if (ethereum) {\n      setChainId(ethereum.chainId);\n      // it returns null sometimes\n      if (ethereum.selectedAddress) {\n        setSelectedAddress(ethereum.selectedAddress);\n      }\n    }\n  }, [ethereum]);\n  useEffect(() => {\n    if (selectedAddress && selectedAddress.length > 0) {\n      // vote = new Vote(voteAddress);\n      Bridge.getBalance(selectedAddress)\n        .then((b) => setBalance(b));\n      bns.initialize().catch((err) => {});\n      const fetchVote = async () => {\n        await vote.initialize();\n        let v = await vote.getTopicsLength();\n        const totalTopics = v[0].toNumber();\n        for (let i=0; i<totalTopics; i++) {\n          let t = await vote.topics(i);\n          let res = t[0];\n          let locked = await vote.getLocked(res);\n          let vo = await vote.getVotedOption(res, selectedAddress);\n          let voted = vo[0];\n          let nonZero = [];\n          for (let j=0; j<res.length; j++) {\n            if (res[j] != 0) {\n              nonZero.push(res[j]);\n            }\n          }\n          const topic = {\n            name: Buffer.from(nonZero).toString('utf8'),\n            locked: locked[0] || voted[0] != 0\n          };\n          setTopics(topics.concat(topic));\n          let ops = Object.assign({}, topicOptions);\n          let tt = await vote.getOptionsLength(res);\n          const totalTopicOptions = tt[0].toNumber();\n          for (let k=0; k<totalTopicOptions; k++) {\n            let op = await vote.getOption(res, k);\n            let opp = op[0];\n            let vt = await vote.getTotalVotes(res, opp);\n            let nonZeroOp = [];\n            for (let l=0; l<opp.length; l++) {\n              if (opp[l] != 0) {\n                nonZeroOp.push(opp[l]);\n              }\n            }\n            const option = {\n              name: Buffer.from(nonZeroOp).toString('utf8'),\n              votes: vt[0].toNumber(),\n              topic: res,\n              option: opp,\n              voted: opp.equals(voted)\n            };\n            \n            if (!ops[topic.name]) {\n              ops[topic.name] = [option];\n            } else {\n              ops[topic.name].push(option);\n            }\n          }\n          setTopicOptions(ops);\n        }\n      }\n      fetchVote()\n        .then(() => {})\n        .catch((err) => {});\n    } else {\n      setBalance(0);\n    }\n  }, [selectedAddress])\n  const requestAccount = async (e) => {\n    e.preventDefault();\n    try {\n      const accounts = await ethereum.request({ method: 'eth_requestAccounts' })\n      if (accounts.length > 0) {\n        setSelectedAddress(accounts[0]);\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  }\n  const LoadingButton = (props) => {\n    let [isLoading, setIsLoading] = useState(false);\n    const onClick = async () => {\n      setIsLoading(true);\n      try {\n        await props.onClick(arguments);\n      } catch (err) {\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    return(<button id={props.id} className=\"button\" onClick={onClick}>\n      <img src=\"https://diode.io/images/spinning.gif\" className={ isLoading ? \"btn-loading\" : \"hide\" } />\n      <span>{props.btnText ? props.btnText : \"click\"}</span>\n    </button>);\n  }\n  const RequestMetamask = () => {\n    return (\n      <div className=\"data\" >\n        <div className=\"content\">\n          <div className=\"marginized-bottom\"></div>\n          <div className=\"not-enabled\">\n            <button className=\"button\" onClick={(e) => { requestAccount(e) }}>Enable MetaMask</button>\n            <div className=\"error\">MetaMask is not connected to the Diode Network ({ethereum.networkVersion})</div>\n            <div className=\"message\">\n              The Diode Network Explorer uses\n              <a target=\"_blank\" href=\"https://metamask.io\">MetaMask</a> to\n              authenticate your account. Please enable MetaMask to manage your\n              settings. <br /><br />\n              If you don’t have MetaMask installed, follow\n              <a target=\"_blank\" href=\"https://support.diode.io/article/uec3mloh9z-metamask\">these instructions</a>\n              to get started.\n            </div>\n          </div>\n        </div>\n      </div>)\n  }\n  \n  const EnableMetamask = () => {\n    if (!selectedAddress) {\n      return (<RequestMetamask />)\n    }\n    let name = \"\";\n    const isValidBNS = (n) => {\n      return n.length > 7 || /^(0x)?[a-f0-9]{40}$/i.test(n);\n    }\n    const setLookupBNS = async (e) => {\n      name = e.target.value;\n      // if (!isValidBNS(name)) {\n      //   name = \"\";\n      // }\n    }\n    const lookupBNS = async (e) => {\n      if (isValidBNS(name)) {\n        if (/^(0x)?[a-f0-9]{40}$/i.test(name)) {\n          await bns.sendTransaction(name, 0, 0, \"\");\n          return\n        }\n        let res = await bns.Resolve(name);\n        let addr = res[0];\n        if (addr != '0x0000000000000000000000000000000000000000') {\n          await bns.sendTransaction(addr, 0, 0, \"\");\n        }\n      }\n    }\n    return (\n      <div className=\"data\">\n        <div className=\"content\">\n          <div className=\"marginized-bottom\">Your Account</div>\n          <div>\n            <div className=\"marginized\">\n              <QRCode value={selectedAddress} />\n              <br />\n              Name:<br />\n              <a href={\"https://diode.io/prenet/#/address/\"+selectedAddress} className=\"\">{selectedAddress.substr(0, 17)}...</a></div>\n              <div className=\"marginized\">\n                Balance:<br />\n                {balance} DIO<br />\n                Note:<br />\n                The vote was deployed first on Diode Network, you can deploy your own vote smart contract with <a href=\"\">source code</a>.<br />\n                <div className=\"input-button white marginized-top\" style={{minWidth: '250px'}}>\n                  <input className=\"no-icon\" placeholder=\"send to bns\" type=\"text\" onChange={setLookupBNS} />\n                  <LoadingButton onClick={lookupBNS} btnText={\"Send\"}></LoadingButton>\n                </div>\n              </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  const MetamaskNotFound = () => {\n    return (\n      <p>Please install metamask first</p>\n    )\n  }\n  const TopicsTable = ({ vote }) => {\n    let checked = '';\n    let newOption = '';\n    const optionChange = (e) => {\n      const t = e.target;\n      // allow one option\n      if (checked != '') {\n        checked.checked = false;\n      }\n      if (checked == t) {\n        checked = '';\n        return\n      }\n      checked = t;\n    }\n    const voteOption = async (e) => {\n      if (checked == '') {\n        return;\n      }\n      const topic = Buffer.from(checked.dataset.topic);\n      const option = Buffer.from(checked.dataset.option);\n      const topicName = checked.dataset.topicname\n      const name = checked.dataset.optionname\n      try {\n        await vote.voteTopicOption(topic, option);\n        const vs = document.getElementById(`votes-${name}`);\n        if (vs) {\n          vs.textContent = parseInt(vs.textContent) + 1;\n        }\n        const b = document.getElementById(`button-vote-${topicName}`);\n        if (b) {\n          b.remove();\n        }\n      } catch (err) {\n        console.log('[vote]: ', err)\n      }\n    }\n    const newOptionChange = (e, topic) => {\n      const value = e.target.value;\n      // do some validation\n      if (value.length > 0) {\n        // filter new option\n        if (topicOptions[topic]) {\n          let option = topicOptions[topic].filter((o) => {\n            return o.name == newOption;\n          });\n          if (option.length > 0) {\n            return;\n          }\n        }\n        newOption = value;\n      }\n    }\n    const addOption = async (e) => {\n      if (newOption == '') {\n        return;\n      }\n      const topic = Buffer.from(e).toString('hex').padEnd(64, 0);\n      const option = Buffer.from(newOption).toString('hex').padEnd(64, 0);\n      try {\n        await vote.addTopicOption('0x' + topic, '0x' + option);\n        let ops = Object.assign({}, topicOptions);\n        \n        if (ops[e]) {\n          ops[e].push({\n            name: newOption,\n            votes: 0,\n            topic: topic,\n            option: option,\n            voted: false\n          });\n          setTopicOptions(ops);\n        }\n      } catch (err) {\n        console.log('[addOption]: ', err)\n      }\n      return\n    }\n    return (\n      <table className=\"data\">\n        <caption><h1>Vote</h1></caption>\n        <tbody>\n          <tr>\n            <th>Topic</th>\n            <th>Options</th>\n          </tr> \n          {topics.map((t) => {\n            return (\n              <tr key={t.name}>\n                <td>{ t.name } {t.locked}</td>\n                <td>\n                  { topicOptions[t.name] && <div className=\"input-button white marginized-top\">\n                    <input className=\"no-icon\" id={`text-${t.name}`}  placeholder=\"option\" type=\"text\" onChange={(e) => newOptionChange(e, t.name)} />\n                    <LoadingButton id={`button-${t.name}`} onClick={addOption.bind(this,t.name)} btnText={\"Add\"}></LoadingButton>\n                  </div>}\n                  { topicOptions[t.name] && topicOptions[t.name].length > 0 && <div className=\"marginized-top\">{topicOptions[t.name].map((o) => {\n                    return (\n                      <label htmlFor={`checkbox-${o.name}`} key={o.name}>\n                        <input type=\"checkbox\" id={`checkbox-${o.name}`} \n                          defaultChecked={o.voted}\n                          disabled={t.locked}\n                          onChange={optionChange}\n                          data-topic={o.topic}\n                          data-option={o.option}\n                          data-optionname={o.name}\n                          data-topicname={t.name}\n                        />\n                        {o.name} <span id={`votes-${o.name}`}>{o.votes}</span>\n                      </label>\n                    )\n                  })}\n                    {!t.locked && <LoadingButton id={`button-vote-${t.name}`} onClick={voteOption} btnText={\"Vote\"}></LoadingButton>}\n                  </div> }\n                  { !topicOptions[t.name] && <p></p> }\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    )\n  }\n  return (\n    <div>\n      {chainId !== '0xf' && <div className=\"oops-title row\">\n        <div>\n          <h1>Oops!</h1>\n          <h1>You're using different network!</h1>\n        </div>\n      </div>}\n      {chainId === '0xf' && <div><div className=\"title row\">\n        <div className=\"col-md-3 no-padding\">\n          <h1>Vote Dapp</h1>\n        </div>\n        <div className=\"col-md-3\">\n          <p>Vote address: <a href={`https://diode.io/prenet/#/address/${voteAddress}`}>{voteAddress}</a></p>\n        </div>\n        <div className=\"col-md-4 col-md-offset-2\">\n          {ethereum.isConnected() && <p>\n          connected</p>}\n        </div>\n      </div>\n      <div className=\"page-content\">\n        <div className=\"row align-start\">\n          <div className=\"col-md-3 col-sm-3 padding-right-10\">\n            {ethereum.isMetaMask && <EnableMetamask />}\n            {!ethereum.isMetaMask && <MetamaskNotFound />}\n          </div>\n          <div className=\"col-md-9 col-sm-9\">\n            { topics.length <= 0 && <div></div>}\n            { topics.length > 0 && <TopicsTable vote={vote}/>}\n          </div>\n        </div>\n      </div></div>}\n    </div>\n  )\n}\n\nexport default Body","import Bridge from './Bridge';\nimport Abi from 'ethereumjs-abi';\nimport KeccakHashAsync from 'js-keccak-tiny/dist/node-bundle';\n\nfunction Vote(address) {\n  const vote = {};\n  vote._address = address;\n  vote._abi = [\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"address\",\n          \"name\": \"_owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bytes32\",\n          \"name\": \"_topic\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"AddVoteTopic\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"address\",\n          \"name\": \"_owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bytes32\",\n          \"name\": \"_topic\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bytes32\",\n          \"name\": \"_option\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"AddVoteTopicOption\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"address\",\n          \"name\": \"_owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bytes32\",\n          \"name\": \"_topic\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bool\",\n          \"name\": \"_locked\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"LockVoteTopic\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"address\",\n          \"name\": \"_from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bytes32\",\n          \"name\": \"_topic\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bytes32\",\n          \"name\": \"_option\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"VoteTopicOption\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"voting\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"topic\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"locked\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getTopicsLength\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"topic\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"i\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getOption\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"topic\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"getOptionsLength\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"topic\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"getOwner\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"topic\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"getLocked\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"topic\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"option\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"getTotalVotes\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"topic\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"lock\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"topic\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"option\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"voteTopicOption\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"topic\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"addTopic\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"topic\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"option\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"addTopicOption\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"topic\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"sender\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"getVotedOption\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"index\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"topics\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"topic\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    },\n  ];\n  vote.initialize = async () => {\n    window.aabi = Abi\n    vote.keccak = await KeccakHashAsync();\n    // loop through abi, and setup the promise function\n    vote._abi = vote._abi.map((a) => {\n      if (a.type === 'function') {\n        let inputsType = a.inputs.map((i) => {\n          return i.internalType;\n        });\n        let outputsType = a.outputs.map((i) => {\n          return i.internalType;\n        });\n        let hash = vote.keccak.keccak256(Buffer.from(`${a.name}(${inputsType.join(',')})`));\n        a.inputsType = inputsType;\n        a.outputsType = outputsType;\n        a.signature = hash.slice(0, 4);\n        vote[a.name] = async (...args) => {\n          const params = Abi.rawEncode(a.inputsType, args)\n          let conBuf = Buffer(params.length + 4)\n          conBuf.fill(a.signature);\n          conBuf.fill(params, 4);\n          const callData = '0x' + conBuf.toString('hex');\n          if (a.stateMutability === 'view' && a.constant) {\n            let ret = await Bridge.ethCall({\n              to: vote._address,\n              data: callData\n            })\n            ret = Buffer.from(ret.substr(2), 'hex')\n            return Abi.rawDecode(a.outputsType, ret);\n          }\n          let confirmation;\n          try {\n            console.log({params: [\n              { to: vote._address, data: callData, gasPrice: 0 },\n            ],\n            from: window.ethereum.selectedAddress})\n            let tx = await window.ethereum.request({\n              method: \"eth_sendTransaction\",\n              params: [\n                { from: window.ethereum.selectedAddress, to: vote._address, data: callData, gasPrice: 0 },\n              ],\n              from: window.ethereum.selectedAddress,\n            });\n\n            confirmation = await Bridge.isTxConfirmed(tx);\n          } catch (err) {\n            console.log(\"[Transaction] error: \", a.name, args, err);\n          }\n          return confirmation;\n        }\n      }\n      return a;\n    })\n  };\n  return vote;\n}\n\nexport default Vote;","import Bridge from './Bridge';\nimport Abi from 'ethereumjs-abi';\nimport KeccakHashAsync from 'js-keccak-tiny/dist/node-bundle';\n\nfunction BNS(address) {\n  const bns = {};\n  bns._address = address;\n  bns._abi = [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"name\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"Resolve\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"result\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    },\n  ];\n  bns.initialize = async () => {\n    window.aabi = Abi\n    bns.keccak = await KeccakHashAsync();\n    // loop through abi, and setup the promise function\n    bns._abi = bns._abi.map((a) => {\n      if (a.type === 'function') {\n        let inputsType = a.inputs.map((i) => {\n          return i.internalType;\n        });\n        let outputsType = a.outputs.map((i) => {\n          return i.internalType;\n        });\n        let hash = bns.keccak.keccak256(Buffer.from(`${a.name}(${inputsType.join(',')})`));\n        a.inputsType = inputsType;\n        a.outputsType = outputsType;\n        a.signature = hash.slice(0, 4);\n        bns[a.name] = async (...args) => {\n          const params = Abi.rawEncode(a.inputsType, args)\n          let conBuf = Buffer(params.length + 4)\n          conBuf.fill(a.signature);\n          conBuf.fill(params, 4);\n          const callData = '0x' + conBuf.toString('hex');\n          if (a.stateMutability === 'view' && a.constant) {\n            let ret = await Bridge.ethCall({\n              to: bns._address,\n              data: callData\n            })\n            ret = Buffer.from(ret.substr(2), 'hex')\n            return Abi.rawDecode(a.outputsType, ret);\n          }\n          let confirmation;\n          try {\n            console.log({params: [\n              { to: bns._address, data: callData, gasPrice: 0 },\n            ],\n            from: window.ethereum.selectedAddress})\n            let tx = await window.ethereum.request({\n              method: \"eth_sendTransaction\",\n              params: [\n                { from: window.ethereum.selectedAddress, to: bns._address, data: callData, gasPrice: 0 },\n              ],\n              from: window.ethereum.selectedAddress,\n            });\n\n            confirmation = await Bridge.isTxConfirmed(tx);\n          } catch (err) {\n            console.log(\"[Transaction] error: \", a.name, args, err);\n          }\n          return confirmation;\n        }\n      }\n      return a;\n    })\n  };\n  bns.sendTransaction = async (to, value, data) => {\n    let confirmation;\n    try {\n      console.log({params: [\n        { to: to, value: value, gasPrice: 0, data: data },\n      ],\n      from: window.ethereum.selectedAddress})\n      let tx = await window.ethereum.request({\n        method: \"eth_sendTransaction\",\n        params: [\n          { from: window.ethereum.selectedAddress, to: to, value: value, gasPrice: 0, data: data },\n        ],\n        from: window.ethereum.selectedAddress,\n      });\n\n      confirmation = await Bridge.isTxConfirmed(tx);\n    } catch (err) {\n      console.log(\"[Transaction] error: \", err);\n    }\n    return confirmation;\n  };\n  return bns;\n}\n\nexport default BNS;"],"sourceRoot":""}